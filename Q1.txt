//IR in out (L2)

#include <Bounce.h>
#include <LiquidCrystal.h>

LiquidCrystal lcd(13, 12, 11, 10, 9, 8);
Bounce button1 = Bounce(2, 1);
Bounce button2 = Bounce(3, 1);

int countIN  = 0;
int countOUT = 0;


void setup() {
  // put your setup code here, to run once:
  pinMode(2, INPUT); //IR for in.
  pinMode(3, INPUT); //IR for out
  lcd.begin(16, 2);
  lcd.clear();
  lcd.print("In: ");
  lcd.setCursor(10, 0);
  lcd.print("Out: ");

}

void loop() {
  // put your main code here, to run repeatedly:
  if(button1.update()){
    if(button1.risingEdge()){
      countIN++;
    }
  
  }

  if(button2.update()){
    if(button2.risingEdge()){
      countOUT++;
    }
  
  }


  lcd.setCursor(3, 0);
  lcd.print(countIN);

  lcd.setCursor(14, 0);
  lcd.print(countOUT);


}

//LDR (L3)
const int ldr_pin = A0;
const int led_pin = 1;

void setup() {
  // put your setup code here, to run once:
  pinMode(ldr_pin, INPUT);
  pinMode(led_pin, OUTPUT);
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
}

void loop() {
  // put your main code here, to run repeatedly:
  int ldr_status = analogRead(ldr_pin);

  if (ldr_status > 200) {
    digitalWrite(led_pin, HIGH);
    digitalWrite(2, HIGH);
    digitalWrite(3, LOW);
    delay(1000);
  } else {
    digitalWrite(led_pin, LOW);
    digitalWrite(2, LOW);
    digitalWrite(3, LOW);
    delay(1000);
  }
}

//Soil (L4)

#include <LiquidCrystal.h>
const int rs = 13, en = 12, d4 = 11, d5 = 10, d6 = 9, d7 = 8;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

const int temp_sensor = A0;
const int soil_sensor = A1;
int temp_read, soil_read;

void setup() {
  // put your setup code here, to run once:
  pinMode(temp_sensor, INPUT);
  pinMode(soil_sensor, INPUT);
  pinMode(5, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(A2, OUTPUT);
  lcd.begin(16, 2);
}

void loop() {
  // put your main code here, to run repeatedly:
  temp_read = analogRead(A0);
  float temp_value = ((temp_read) / 1024.0) * 500;
  String temp_value_str = String(temp_value);

  soil_read = analogRead(temp_sensor);
  int soil_value = map(soil_read, 0, 255, 0, 100);


  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Temp: ");
  lcd.print(temp_value_str);
  lcd.print("c");

  lcd.setCursor(0, 1);
  lcd.print("Soil: ");
  lcd.print(soil_value);
  lcd.print("%");

  if (temp_value > 27) {
    digitalWrite(5, HIGH);
    digitalWrite(4, LOW);
    digitalWrite(A2, HIGH);
  } else {
    digitalWrite(5, LOW);
    digitalWrite(4, LOW);
    digitalWrite(A2, LOW);
  }


  delay(3000);
}

//smart store (L5)

#include <LiquidCrystal.h>


const int rs = 13, en = 12, d4 = 11, d5 = 10, d6 = 9, d7 = 8;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

int temp, ldr, exit_btn;

int in = 0;
int out = 0;
int total = 0;

const int red = 7;
const int yellow = 6;
const int green = 5;
const int blue = 4;


void setup() {
  // put your setup code here, to run once:
  lcd.begin(16, 4);

  pinMode(A1, INPUT);
  pinMode(A1, INPUT);
  pinMode(red, INPUT);
  pinMode(yellow, INPUT);
  pinMode(green, INPUT);
  pinMode(blue, INPUT);
  pinMode(0, INPUT);
  pinMode(1, INPUT);
}


void loop() {
  // put your main code here, to run repeatedly:
  temp = analogRead(A1);
  float temp_value = ((temp) / 1024.0) * 500;
  String temp_value_str = String(temp_value);

  ldr = analogRead(A0);


  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Temp: ");
  lcd.print(temp_value_str);
  lcd.setCursor(0, 1);
  lcd.print("Light: ");
  lcd.print(ldr);

  if (temp_value <= 25) {
    digitalWrite(blue, LOW);
    digitalWrite(red, HIGH);
  } else {
    digitalWrite(blue, HIGH);
    digitalWrite(red, LOW);
  }

  if (ldr < 50) {
    digitalWrite(yellow, HIGH);
  } else {
    digitalWrite(yellow, LOW);
  }

  exit_btn = digitalRead(0);

  if (exit_btn == HIGH) {
    in++;
  }


  lcd.setCursor(0, 2);
  lcd.print("In: ");
  lcd.print(in);


  delay(1000);
}

//smart door Lock

#include <LiquidCrystal.h>
#include <Keypad.h>
#include <EEPROM.h>


const byte ROWS = 4;
const byte COLS = 4;

char keys[4][4] = {
  { '7', '8', '9', '/' },
  { '4', '5', '6', '*' },
  { '1', '2', '3', '-' },
  { 'c', '0', '=', '+' }
};

byte rowPins[ROWS] = { 7, 6, 5, 4 };
byte colPins[COLS] = { 3, 2, 1, 0 };

//initialize an instance of class NewKeypad
Keypad myKeypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

char password[4] = { '2', '8', '4', '2' };
char userenter[4];

const int rs = 13, en = 12, d4 = 11, d5 = 10, d6 = 9, d7 = 8;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

void setup() {
  // put your setup code here, to run once:
  
  Serial.begin(9600);
  lcd.begin(16, 4);
  pinMode(A0, OUTPUT);



  if (EEPROM.read(4) == 0) {
    for (int a = 0; a <= 3; a++) {
      EEPROM.write(a, password[a]);
      
    }
    
  }

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Press On");
}

void loop() {
  // put your main code here, to run repeatedly:
  byte keycount = 0;
  char keyPressed = myKeypad.getKey();

  if (keyPressed != NO_KEY) {
    if (keyPressed == 'c') {
      boolean a = 1;
      lcd.clear();
      lcd.print("Enter Password");
      lcd.setCursor(0, 1);

      while (a) {
        keyPressed = myKeypad.getKey();
        if (keyPressed != NO_KEY) {
          userenter[keycount] = keyPressed;
          lcd.print(keyPressed);
          keycount++;

          if (keycount == 4) a = 0;
        }
      }
      check_password();
    }
  }
}

void check_password() {
  byte b = 0;
  for (int i = 0; i <= 3; i++) {
    char eeprom = EEPROM.read(i);
    Serial.println(EEPROM.read(i));
    if (userenter[i] == eeprom) {
      b++;
    }
  }
  if (b == 4) {
    lcd.clear();
    lcd.print("Valid password");
    lcd.setCursor(0, 1);
    lcd.print("Door Unlocked");
    digitalWrite(A0, 1);
    delay(3000);
    lcd.clear();
    lcd.print("Door Locked");
    digitalWrite(A0, 0);
    delay(2000);
    lcd.clear();
    lcd.print("Press *");
  } else {
    lcd.clear();
    lcd.print("Invalidpassword");
    lcd.setCursor(0, 1);
    lcd.print("Blocked!!!");
  }
}


//Ass1 (Soil)

#define soil_pin A0
int temp = A1;
int soil_value;
int tempvalue;
void setup() {
Serial.begin(9600); //Vertual Terminal begin
pinMode(13,OUTPUT); 
pinMode(12,OUTPUT); //Water Tank Motor
pinMode(11,OUTPUT); 
pinMode(10,OUTPUT);
pinMode(9,OUTPUT); 
pinMode(8,OUTPUT); //Fertilizer Tank Motor
}
void loop() {

soil_value= analogRead(soil_pin);
soil_value = map(soil_value,0,1023,0,100);
tempvalue = analogRead(temp);
float mv = ( tempvalue/1023.0)*5000;
int cel = mv/10;
Serial.print("Temperature: ");
Serial.print(cel);
Serial.println("c");
Serial.print("Soil Moisture: ");
Serial.print(soil_value);
Serial.println("%");


if(soil_value > 40 && cel > 25){ // Soil Moisture Level Above 40% And Temperature Above 25 c Water Tank Motor ON for Plant A
digitalWrite(13,HIGH);
digitalWrite(12,LOW);
Serial.println("Watering For Plant A");
}else{
digitalWrite(13,LOW);//Motor OFF
digitalWrite(12,LOW);
}
if(soil_value > 30 && soil_value < 35){ // Soil Moisture Level Between 30% And 35% Fertilizer Tank Motor ON for Plant A
digitalWrite(11,HIGH);
digitalWrite(10,LOW);
digitalWrite(9,HIGH);
digitalWrite(8,LOW);
Serial.println("Fertilizing For Plant A");
delay(3000);
}else{
digitalWrite(11,LOW);//Motor OFF
digitalWrite(10,LOW);
digitalWrite(9,LOW);
digitalWrite(8,LOW);
}
if(cel > 23){ // Temperature Above 23 c Water Tank Motor ON for Plant B
digitalWrite(13,HIGH);
digitalWrite(12,LOW);
Serial.println("Watering For Plant B");
}else{
digitalWrite(13,LOW);//Motor OFF
digitalWrite(12,LOW);
}
if(soil_value > 35 && soil_value < 40){ // Soil Moisture Level Between 35% And 40% Fertilizer Tank Motor ON for Plant B
digitalWrite(11,HIGH);
digitalWrite(10,LOW);
digitalWrite(9,HIGH);
digitalWrite(8,LOW);
Serial.println("Fertilizing For Plant B");
delay(5000);
}else{
digitalWrite(11,LOW);//Motor OFF
digitalWrite(10,LOW);
digitalWrite(9,LOW);
digitalWrite(8,LOW);
}
Serial.println("-------------------------------------------------------------------");
delay(1000);
}


//Ass2 (door)

#include <LiquidCrystal.h>
#include <Keypad.h>
#include <EEPROM.h>

LiquidCrystal lcd(13, 12, 11, 10, 9, 8);

const byte ROWS = 4; 
const byte COLS = 4; 

char keypadKeys[ROWS][COLS] = {
  {'7','8','9','A'},
  {'4','5','6','B'},
  {'1','2','3','C'},
  {'*','0','=','D'}
};
byte rowPins[ROWS] = {3, 2, 1, 0}; 
byte colPins[COLS] = {7, 6, 5, 4}; 


Keypad myKeypad = Keypad( makeKeymap(keypadKeys), rowPins, colPins, ROWS, COLS); 

char password[4] = {'1','3','5','B'};
char userenter[4];
byte c=0;
void setup() {
  // put your setup code here, to run once:
  pinMode(A0,OUTPUT);
  pinMode(A1,OUTPUT);
  pinMode(A2,OUTPUT);
  pinMode(A3,OUTPUT);
  pinMode(A4,OUTPUT);

  if(EEPROM.read(4) == 255){
    for(int a=0;a<=3;a++){
    EEPROM.write(a,password[a]);
    }
   }  
    
  lcd.begin(16,2);
  lcd.clear();
  lcd.print("Press *");
}

void loop() {
  // put your main code here, to run repeatedly:
 byte keycount=0;
 char keypressed = myKeypad.getKey();
  if(keypressed != NO_KEY){
    if(keypressed == '*'){
      boolean a=1;
      lcd.clear();
      lcd.print("Enter Password");
      lcd.setCursor(0,1);

  while(a){
    keypressed = myKeypad.getKey();
    if(keypressed != NO_KEY){
    userenter[keycount] = keypressed;
    lcd.print("*");

    keycount++;

  if(keycount == 4)a=0;
    }
  }
  check_password();
 }
}
  
}
void check_password(){
  byte b=0;
  
  for(int i=0; i<=3; i++){
    char eeprom = EEPROM.read(i);
    if(userenter[i]==eeprom){
      b++;
    }
  }
   if(b < 4){
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("Wrong Password");
    delay(1000);
    lcd.clear();
    lcd.print("Press *");
    c++;
    }
    
  if(b==4){
    lcd.clear();
    lcd.setCursor(0,1);
    lcd.print("Door Open");
    digitalWrite(A1,1);
    digitalWrite(A2,0);
    digitalWrite(A3,1);
    delay(3000);
    lcd.clear();
    lcd.print("Door Closed");
    digitalWrite(A1,0);
    digitalWrite(A2,0);
    digitalWrite(A3,0);
    delay(2000);
    lcd.clear();
    lcd.print("Press *");
  }
  if(c==3){
    lcd.clear();
    lcd.setCursor(0,1);
    lcd.print("Warning!!!");
    digitalWrite(A0,1);
    digitalWrite(A4,1);
    delay(3000);
    digitalWrite(A0,0);
    digitalWrite(A4,0);
    lcd.clear();
    lcd.print("Press *");
    c=0;
  }
}

//Ass3 carpark

#include <LiquidCrystal.h>
#include <Bounce2.h>
#include <Servo.h>

LiquidCrystal lcd(12, 11,9, 8, 7, 6, 5, 4, 3, 2); 

Bounce btnin = Bounce(52,1);
Bounce btnout = Bounce(53,1);

Servo myservo;
int pos=0;

int s1 = 0;
int s2 = 0;
int s3 = 0;
int s4 = 0;
int in = 0;
int out = 0;
int total = 0;

void setup() {
 pinMode(1,OUTPUT);
 pinMode(0,OUTPUT);
 pinMode(14,OUTPUT);
 pinMode(15,OUTPUT);
 pinMode(16,OUTPUT);
 pinMode(17,OUTPUT);
 pinMode(18,OUTPUT);
 pinMode(19,OUTPUT);
 pinMode(20,INPUT);
 pinMode(21,INPUT);
 pinMode(22,INPUT);
 pinMode(23,INPUT);
 pinMode(53,INPUT);
 pinMode(52,INPUT);
 pinMode(51,OUTPUT);

 myservo.attach(51);
 
 lcd.begin(20, 4);
 lcd.clear();
 lcd.setCursor(0,1);
 lcd.print("Total: ");
 lcd.setCursor(0,2);
 lcd.print("S1: ");
 lcd.setCursor(11,2);
 lcd.print("S2: ");
 lcd.setCursor(0,3);
 lcd.print("S3: ");
 lcd.setCursor(11,3);
 lcd.print("S4: ");
}

void loop() {
  int s1state = digitalRead(20);
  int s2state = digitalRead(21);
  int s3state = digitalRead(22);
  int s4state = digitalRead(23);
  
  if(s1state == HIGH){
    s1++;
  }else if(s1state == LOW){
    s1=0;
  }

  if(s2state == HIGH){
    s2++;
  }else if(s2state == LOW){
    s2=0;
  }

  if(s3state == HIGH){
    s3++;
  }else if(s3state == LOW){
    s3=0;
  }

  if(s4state == HIGH){
    s4++;
  }else if(s4state == LOW){
      s4=0;
  }
    
  if(btnin.update()){
    if(total != 4){
    if(btnin.fell()){
      in++;
     if(total != 4){
     for (pos = 0; pos <= 90; pos++) {
      myservo.write(pos);
      delay(15);
     }
    for (pos = 90; pos >= 0; pos--) {
      myservo.write(pos);
      delay(15);
    }
      }
    }
    }
  }
  
  if(btnout.update()){
    if(btnout.fell()){
      out++;   
     for (pos = 0; pos <= 90; pos++) {
      myservo.write(pos);
      delay(15);
     }
    for (pos = 90; pos >= 0; pos--) {
      myservo.write(pos);
      delay(15);
    }
  }
}
  
  total = in - out;
  lcd.setCursor(7,1);
  lcd.print(total);

  if(total >= 4){
    lcd.setCursor(2,0);
    lcd.print("Sorry,no empty");      
    }else{
    lcd.setCursor(2,0);
    lcd.print("    Slot      ");
    }

  if(s1 == 0){
    digitalWrite(19,1);
    digitalWrite(18,0);
    lcd.setCursor(4,2);
    lcd.print("Empty");
    }else{
    digitalWrite(19,0);
    digitalWrite(18,1);
    lcd.setCursor(4,2);
    lcd.print("NA   ");     
    }
  if(s2 == 0){
    digitalWrite(17,1);
    digitalWrite(16,0);
    lcd.setCursor(15,2);
    lcd.print("Empty");
    }else{
    digitalWrite(17,0);
    digitalWrite(16,1);
    lcd.setCursor(15,2);
    lcd.print("NA   ");     
    }
  if(s3 == 0){
    digitalWrite(15,1);
    digitalWrite(14,0);
    lcd.setCursor(4,3);
    lcd.print("Empty");
    }else{
    digitalWrite(15,0);
    digitalWrite(14,1);
    lcd.setCursor(4,3);
    lcd.print("NA   ");     
    }
  if(s4 == 0){
    digitalWrite(0,1);
    digitalWrite(1,0);
    lcd.setCursor(15,3);
    lcd.print("Empty");
    }else{
    digitalWrite(0,0);
    digitalWrite(1,1);
    lcd.setCursor(15,3);
    lcd.print("NA   ");     
    }
}

